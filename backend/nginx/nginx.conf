user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  upstream app_upstream {
    server app:8080;
  }

  upstream chat_upstream {
    server chat:8080;
  }

  upstream rabbitmq_upstream {
    server rabbitmq:15672;
  }

  server {
    listen 443 ssl;
    server_name ; # 도메인 명 작성

    ssl_certificate # /etc/ssl/도메인 명/certificate.crt;
    ssl_certificate_key # /etc/ssl/도메인 명/private.key;

    location /api/ {
      proxy_pass http://app_upstream/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /chat/ {
      proxy_pass http://chat_upstream/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_redirect off;
    }

    location /rabbitmq/ {
      proxy_pass http://rabbitmq_upstream/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }


    # Optional: Add more locations if you have more services to proxy
  }
    server {
        location /.well-known/pki-validation/ {
            alias /usr/share/nginx/html/.well-known/pki-validation/;  # 도메인 검증 파일이 위치하는 실제 경로로 변경
        }

        location / {
             return 301 https://$host$request_uri;
        }     # managed by Certbot

            listen 80;
            server_name ; #도메인 명 작성
            return 404; # managed by Certbot

    }

}
